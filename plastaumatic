#!/bin/bash

## Exits if a command fails
set -eo pipefail

## parse arguments
while getopts ':s:g:r:f:n:h' options
do
  case $options in
    s) seed=$OPTARG ;;
    g) ref_gb=$OPTARG ;;
	r) range=$OPTARG ;;
    f) fof=$OPTARG ;;
	n) novo=$OPTARG ;;
	h) echo -e "Usage:\tplastaumatic -s seed.fa -g reference.gb -r <120000-160000> -f fof.txt -n NOVOPlasty4.3.1.pl\
				\noptions:\n\t -s\t Path to the seed file for assembly\
				\n\t -g\t Path to the reference GenBank file\
				\n\t -r\t Plastome assembly size range [150000-160000]\
				\n\t -f\t Path to the file-of-filenames with reads\
				\n\t -n\t Path to NOVOPlasty executable\
				\n\t -h\t Shows this help message\n"
		exit;;
	:) echo "ERROR: -$OPTARG requires an argument" 1>&2
    	exit;;
	\?) echo "Invalid Option: try  plastaumatic -h" 1>&2
      exit;;
  esac
done

## Checks missing options
if [ $# -eq 0 ] || [ -z "$seed" ] || [ -z "$ref_gb" ] || [ -z "$range" ] || [ -z "$fof" ]  || [ -z "$novo" ];then 
	echo "ERROR: missing options, try
            plastaumatic -h"
	exit
fi

## Checks if the input files are present
if [ ! -f $seed ];then
	echo -e "ERROR:\t Seed file does not exist, check again" && exit
elif [ ! -f $ref_gb ];then 
	echo -e "ERROR:\t Reference GenBank file does not exist, check again" && exit
elif ! command -v fastp &> /dev/null ;then 
	echo -e "ERROR:\t fastp executable does not exist in the path, check again" && exit
elif ! command -v samtools &> /dev/null ;then 
	echo -e "ERROR:\t samtools executable does not exist in the path, check again" && exit
elif ! command -v blastn &> /dev/null ;then 
	echo -e "ERROR:\t blastn executable does not exist in the path, check again" && exit
elif [ ! -f $novo ];then 
	echo -e "ERROR:\t NOVOPlasty executable does not exist, check again" && exit
elif [ ! -f $fof ];then 
	echo -e "ERROR:\t fof file does not exist, check again" && exit
fi

## Sets memory and cpus available
# threads=$(nproc --all)
# max_memory=$(awk '/MemAvailable/ {printf "%.0f\n", $2/1024/1024*0.9}' /proc/meminfo)
threads=1
max_memory=30
repo=$(dirname $0)

for line in `cat $fof`;do 
	prefix=$(echo $line|cut -d ',' -f1)
	read1=$(echo $line|cut -d ',' -f2)
	read2=$(echo $line|cut -d ',' -f3)

	if [ ! -f $read1 ] || [ ! -f $read2 ];then
		echo -e "ERROR: \t Read files does not exist, check again" && exit 1
	fi  

	echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tRunning plastaumatic on ${prefix}" 

	## Setting the directories
	echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tsetting up the directories" 
	mkdir -p ${prefix}/{00-logs,01-trim,02-assemble,03-standardize,04-annotate,05-tbl}

	## Trimming
	if [ ! -f ${prefix}/01-trim/trimming.done ];then
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\ttrimming the reads"
		fastp -i ${read1} -I ${read2} -o ${prefix}/01-trim/${prefix}_1.fq -O ${prefix}/01-trim/${prefix}_2.fq -w ${threads} \
			-h ${prefix}/01-trim/${prefix}.html -j ${prefix}/01-trim/${prefix}.json &> ${prefix}/00-logs/01-trim.log
		touch ${prefix}/01-trim/trimming.done
	else 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\ttrimming was already done ... skipping"
	fi
	
	## de novo assembly
	if [ ! -f ${prefix}/02-assemble/novoplasty.done ];then 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tperforming the de novo assembly"
		read1_novo=${prefix}/01-trim/${prefix}_1.fq
		read2_novo=${prefix}/01-trim/${prefix}_2.fq

		cat ${repo}/scripts/config_novo.txt |sed "s|WORKDIR|${prefix}/02-assemble/|g"| sed "s|test|$prefix|" |sed "s|max_memory|${max_memory}|" | \
		sed "s|path_to_seed|${seed}|" |sed "s|range|$range|"|\
		sed "s|read1|$read1_novo|" | sed "s|read2|$read2_novo|" > ${prefix}/${prefix}_config.txt

		perl ${novo} -c ${prefix}/${prefix}_config.txt &> ${prefix}/00-logs/02-assemble.log

		touch ${prefix}/02-assemble/novoplasty.done
	else 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tassembly was already done ... skipping"
	fi 

	## Standardizes the assembly
	if [ ! -f ${prefix}/03-standardize/standardization.done ];then 
		${repo}/scripts/standardize_cpDNA.sh -d ${prefix}/02-assemble/ -o ${prefix}/03-standardize/${prefix}.plastome.fa -p ${prefix}
		touch ${prefix}/03-standardize/standardization.done
	else 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tstandardization was already done ... skipping"
	fi 

	## Annotation of the assembly
	if [ ! -f ${prefix}/04-annotate/annotation.done ];then 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tannotating the assembly"
		python3 ${repo}/scripts/AnnoPlast.py -f ${prefix}/03-standardize/${prefix}.plastome.fa -g ${ref_gb} -o ${prefix}/04-annotate -p ${prefix}
		touch ${prefix}/04-annotate/annotation.done
	else 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tannotation was already done ... skipping"
	fi 

	## genbank to tbl format for NCBI submission
	if [ ! -f ${prefix}/05-tbl/tbl.done ];then 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tconverting genbank file to .tbl"
		${repo}/scripts/gbf2tbl.pl ${prefix}/04-annotate/${prefix}.gb
		mv ${prefix}/04-annotate/${prefix}.tbl ${prefix}/05-tbl/${prefix}.tbl
		mv ${prefix}/04-annotate/${prefix}.fsa ${prefix}/05-tbl/${prefix}.fsa
		touch ${prefix}/05-tbl/tbl.done
		ln -s 03-standardize/${prefix}.plastome.fa ${prefix}/${prefix}.plastome.fa
		ln -s 04-annotate/${prefix}.gb ${prefix}/${prefix}.plastome.gb

	else 
		echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tgenbank to tbl conversion was already done ... skipping"
	fi 
	echo -e "$(date +'%Y-%m-%d %H:%M:%S')\tFinished plastaumatic on $prefix\n\n"
done 

